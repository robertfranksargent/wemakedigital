package com.wemakedigital.net.status{	import flash.events.NetStatusEvent;			public class NetStatusInfo 	{		public static const LEVEL_ERROR : String = "error" ;		public static const LEVEL_STATUS : String = "status" ;		public static const LEVEL_WARNING : String = "warning" ;				public static const NET_STREAM_BUFFER_EMPTY : String = "NetStream.Buffer.Empty" ;		public static const NET_STREAM_BUFFER_FULL : String = "NetStream.Buffer.Full" ;		public static const NET_STREAM_BUFFER_FLUSH : String = "NetStream.Buffer.Flush" ;		public static const NET_STREAM_FAILED : String = "NetStream.Failed" ;		public static const NET_STREAM_PUBLISH_START : String = "NetStream.Publish.Start" ;		public static const NET_STREAM_PUBLISH_BAD_NAME : String = "NetStream.Publish.BadName" ;		public static const NET_STREAM_PUBLISH_IDLE : String = "NetStream.Publish.Idle" ;		public static const NET_STREAM_UNPUBLISH_SUCCESS : String = "NetStream.Unpublish.Success" ;		public static const NET_STREAM_PLAY_START : String = "NetStream.Play.Start" ;		public static const NET_STREAM_PLAY_STOP : String = "NetStream.Play.Stop" ;		public static const NET_STREAM_PLAY_FAILED : String = "NetStream.Play.Failed" ;		public static const NET_STREAM_PLAY_STREAM_NOT_FOUND : String = "NetStream.Play.StreamNotFound" ;		public static const NET_STREAM_PLAY_RESET : String = "NetStream.Play.Reset" ;		public static const NET_STREAM_PLAY_PUBLISH_NOTIFY : String = "NetStream.Play.PublishNotify" ;		public static const NET_STREAM_PLAY_UNPUBLISH_NOTIFY : String = "NetStream.Play.UnpublishNotify" ;		public static const NET_STREAM_PLAY_INSUFFICIENT_BW : String = "NetStream.Play.InsufficientBW" ;		public static const NET_STREAM_PLAY_FILE_STRUCTURE_INVALID : String = "NetStream.Play.FileStructureInvalid" ;		public static const NET_STREAM_PLAY_NO_SUPPORTED_TRACK_FOUND : String = "NetStream.Play.NoSupportedTrackFound" ;		public static const NET_STREAM_PAUSE_NOTIFY : String = "NetStream.Pause.Notify" ;		public static const NET_STREAM_UNPAUSE_NOTIFY : String = "NetStream.Unpause.Notify" ;		public static const NET_STREAM_RECORD_START : String = "NetStream.Record.Start" ;		public static const NET_STREAM_RECORD_NO_ACCESS : String = "NetStream.Record.NoAccess" ;		public static const NET_STREAM_RECORD_STOP : String = "NetStream.Record.Stop" ;		public static const NET_STREAM_RECORD_FAILED : String = "NetStream.Record.Failed" ;		public static const NET_STREAM_SEEK_FAILED : String = "NetStream.Seek.Failed" ;		public static const NET_STREAM_SEEK_INVALID_TIME : String = "NetStream.Seek.InvalidTime" ;		public static const NET_STREAM_SEEK_NOTIFY : String = "NetStream.Seek.Notify" ;		public static const NET_CONNECTION_CALL_BAD_VERSION : String = "NetConnection.Call.BadVersion" ;		public static const NET_CONNECTION_CALL_FAILED : String = "NetConnection.Call.Failed" ;		public static const NET_CONNECTION_CALL_PROHIBITED : String = "NetConnection.Call.Prohibited" ;		public static const NET_CONNECTION_CONNECT_CLOSED : String = "NetConnection.Connect.Closed" ;		public static const NET_CONNECTION_CONNECT_FAILED : String = "NetConnection.Connect.Failed" ;		public static const NET_CONNECTION_CONNECT_SUCCESS : String = "NetConnection.Connect.Success" ;		public static const NET_CONNECTION_CONNECT_REJECTED : String = "NetConnection.Connect.Rejected" ;		public static const NET_CONNECTION_CONNECT_APP_SHUTDOWN : String = "NetConnection.Connect.AppShutdown" ;		public static const NET_CONNECTION_CONNECT_INVALID_APP : String = "NetConnection.Connect.InvalidApp" ;		public static const SHARED_OBJECT_FLUSH_SUCCESS : String = "SharedObject.Flush.Success" ;		public static const SHARED_OBJECT_FLUSH_FAILED : String = "SharedObject.Flush.Failed" ;		public static const SHARED_OBJECT_BAD_PERSISTENCE : String = "SharedObject.BadPersistence" ;		public static const SHARED_OBJECT_URI_MISMATCH : String = "SharedObject.UriMismatch" ;				public static function getCode ( e : NetStatusEvent ) : String		{			return e.info[ "code" ] ;		} 				public static function getLevel ( e : NetStatusEvent ) : String		{			return e.info[ "level" ] ;		}	}}